{"version":3,"file":"LinkWithPreview.js","sourceRoot":"","sources":["../../src/link/LinkWithPreview.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport React, {\n  createContext,\n  isValidElement,\n  use,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type ReactElement,\n} from 'react';\nimport { StyleSheet, Text } from 'react-native';\n\nimport { useRouter } from '../hooks';\nimport { BaseExpoRouterLink } from './BaseExpoRouterLink';\nimport { HrefPreview } from './preview/HrefPreview';\nimport { useLinkPreviewContext } from './preview/LinkPreviewContext';\nimport {\n  NativeLinkPreview,\n  NativeLinkPreviewAction,\n  NativeLinkPreviewContent,\n} from './preview/native';\nimport { useNextScreenId } from './preview/useNextScreenId';\nimport { LinkProps } from './useLinkHooks';\nimport { shouldLinkExternally } from '../utils/url';\nimport { useIsPreview } from './preview/PreviewRouteContext';\nimport { Slot } from '../ui/Slot';\n\nconst InternalLinkPreviewContext = createContext<\n  { isVisible: boolean; href: LinkProps['href'] } | undefined\n>(undefined);\n\nexport function LinkWithPreview({ children, ...rest }: LinkProps) {\n  useEffect(() => {\n    if (shouldLinkExternally(String(rest.href))) {\n      throw new Error('External links previews are not supported');\n    }\n    if (rest.replace) {\n      throw new Error('Using replace links with preview is not supported');\n    }\n  }, [rest.href, rest.replace]);\n  return (\n    <BaseExpoRouterLink {...rest} asChild>\n      <InnerLinkWithPreview href={rest.href} asChild={rest.asChild}>\n        {children}\n      </InnerLinkWithPreview>\n    </BaseExpoRouterLink>\n  );\n}\n\ntype InnerLinkProps = Pick<LinkProps, 'href' | 'asChild' | 'children' | 'style'> & {\n  onPress?: () => void;\n  onClick?: () => void;\n};\n\nfunction InnerLinkWithPreview({\n  children,\n  asChild,\n  href,\n  style,\n  onPress,\n  onClick,\n}: InnerLinkProps) {\n  const router = useRouter();\n  const { setIsPreviewOpen } = useLinkPreviewContext();\n  const [isCurrentPreviewOpen, setIsCurrenPreviewOpen] = useState(false);\n\n  const hrefWithoutQuery = String(href).split('?')[0];\n  const prevHrefWithoutQuery = useRef(hrefWithoutQuery);\n\n  useEffect(() => {\n    if (isCurrentPreviewOpen) {\n      if (prevHrefWithoutQuery.current !== hrefWithoutQuery) {\n        throw new Error(\n          'Link does not support changing the href prop after the preview has been opened. Please ensure that the href prop is stable and does not change between renders.'\n        );\n      }\n    } else {\n      prevHrefWithoutQuery.current = hrefWithoutQuery;\n    }\n  }, [hrefWithoutQuery]);\n\n  const [nextScreenId, updateNextScreenId] = useNextScreenId();\n\n  const triggerElement = React.useMemo(\n    () => getFirstChildOfType(children, LinkTrigger),\n    [children]\n  );\n  const menuElement = React.useMemo(() => getFirstChildOfType(children, LinkMenu), [children]);\n  const actionsHandlers = React.useMemo(\n    () =>\n      convertActionsToActionsHandlers(\n        convertChildrenArrayToActions(React.Children.toArray(menuElement?.props.children))\n      ),\n    [menuElement]\n  );\n  const previewElement = React.useMemo(\n    () => getFirstChildOfType(children, LinkPreview),\n    [children]\n  );\n\n  if (!previewElement) {\n    throw new Error('No <Link.Preview> found. This is likely a bug in expo-router.');\n  }\n  if (!triggerElement) {\n    throw new Error(\n      'When you use <Link.Preview>, you must use <Link.Trigger> to specify the trigger element.'\n    );\n  }\n\n  const componentStyle = useMemo(\n    // `style` will be passed through the slot in BaseExpoRouterLink, because asChild is used\n    () => StyleSheet.flatten([style, triggerElement.props.style]),\n    [style, triggerElement.props.style]\n  );\n\n  const triggerComponentStyle = useMemo(() => {\n    // If asChild is used, then the style should be applied directly to the child element\n    // Component styles will be applied to native element\n    if (asChild) {\n      return {};\n    }\n    // When flex is set on Link.Trigger or Link then the trigger should fill the available space\n    if (componentStyle.flex !== undefined) {\n      return StyleSheet.flatten([componentStyle, { flex: 1 }]);\n    }\n    return componentStyle;\n  }, [componentStyle]);\n\n  const nativeLinkPreviewStyle = useMemo(() => {\n    // Is asChild is used, then the style should be applied to the native element\n    if (asChild) {\n      return componentStyle;\n    }\n    // When flex is set on Link.Trigger or Link then the native element should have the flex,\n    // because it is the outer container\n    if (componentStyle && componentStyle.flex !== undefined) {\n      return {\n        flex: componentStyle.flex,\n      };\n    }\n    // Otherwise, styles will be applied to the Text element\n    return {};\n  }, [asChild, componentStyle]);\n\n  // Copying the behavior of BaseExpoRouterLink\n  const Component = asChild ? Slot : Text;\n\n  return (\n    <NativeLinkPreview\n      style={nativeLinkPreviewStyle}\n      nextScreenId={nextScreenId}\n      onActionSelected={({ nativeEvent: { id } }) => {\n        actionsHandlers[id]?.();\n      }}\n      onWillPreviewOpen={() => {\n        router.prefetch(href);\n        setIsPreviewOpen(true);\n        setIsCurrenPreviewOpen(true);\n      }}\n      onDidPreviewOpen={() => {\n        updateNextScreenId(href);\n      }}\n      onPreviewDidClose={() => {\n        setIsPreviewOpen(false);\n        setIsCurrenPreviewOpen(false);\n      }}\n      onPreviewTapped={() => {\n        router.navigate(href, { __internal__PreviewKey: nextScreenId });\n      }}>\n      <InternalLinkPreviewContext value={{ isVisible: isCurrentPreviewOpen, href }}>\n        <Component\n          {...triggerElement.props}\n          // @ts-expect-error\n          style={triggerComponentStyle ?? undefined}\n          onPress={onPress}\n          onClick={onClick}\n        />\n        {previewElement}\n        {menuElement}\n      </InternalLinkPreviewContext>\n    </NativeLinkPreview>\n  );\n}\n\ninterface LinkMenuAction {\n  /**\n   * The title of the menu item.\n   */\n  title: string;\n  onPress: () => void;\n}\n\nexport function LinkMenuAction(_: LinkMenuAction) {\n  return null;\n}\ninterface LinkMenuProps {\n  children: ReactElement<LinkMenuAction> | ReactElement<LinkMenuAction>[];\n}\n\nexport function LinkMenu({ children }: LinkMenuProps) {\n  if (useIsPreview() || !use(InternalLinkPreviewContext)) {\n    return null;\n  }\n  return convertChildrenArrayToActions(React.Children.toArray(children)).map((action) => {\n    return <NativeLinkPreviewAction key={action.id} title={action.title} id={action.id} />;\n  });\n}\n\ninterface LinkPreviewProps {\n  /**\n   * Sets the preferred width of the preview.\n   * If not set, full width of the screen will be used.\n   *\n   * This is only **preferred** width, the actual width may be different\n   */\n  width?: number;\n\n  /**\n   * Sets the preferred height of the preview.\n   * If not set, full height of the screen will be used.\n   *\n   * This is only **preferred** height, the actual height may be different\n   */\n  height?: number;\n  children?: React.ReactNode;\n}\n\nexport function LinkPreview({ children, width, height }: LinkPreviewProps) {\n  const internalPreviewContext = use(InternalLinkPreviewContext);\n  if (useIsPreview() || !internalPreviewContext) {\n    return null;\n  }\n  const { isVisible, href } = internalPreviewContext;\n  const contentSize = {\n    width: width ?? 0,\n    height: height ?? 0,\n  };\n  let content: React.ReactNode;\n  if (children) {\n    content = isVisible ? children : null;\n  } else {\n    content = isVisible ? <HrefPreview href={href} /> : null;\n  }\n\n  return (\n    <NativeLinkPreviewContent\n      style={{\n        /* Setting default background here, so that the preview is not transparent */\n        backgroundColor: '#fff',\n      }}\n      preferredContentSize={contentSize}>\n      {content}\n    </NativeLinkPreviewContent>\n  );\n}\n\ninterface LinkTriggerProps {\n  children?: React.ReactNode;\n  style?: LinkProps['style'];\n  className?: LinkProps['className'];\n}\n\nexport function LinkTrigger(_: LinkTriggerProps): React.ReactNode {\n  return null;\n}\n\nfunction getFirstChildOfType<PropsT>(\n  children: React.ReactNode | React.ReactNode[],\n  type: (props: PropsT) => unknown\n) {\n  return React.Children.toArray(children).find(\n    (child): child is ReactElement<PropsT> => isValidElement(child) && child.type === type\n  );\n}\n\nfunction convertActionsToActionsHandlers(\n  items: { id: string; title: string; onPress: () => void }[] | undefined\n) {\n  return (items ?? []).reduce(\n    (acc, item) => ({\n      ...acc,\n      [item.id]: item.onPress,\n    }),\n    {} as Record<string, () => void>\n  );\n}\n\nfunction convertChildrenArrayToActions(children: ReturnType<typeof React.Children.toArray>) {\n  return children\n    .filter(\n      (item): item is ReactElement<LinkMenuAction> =>\n        isValidElement(item) && item.type === LinkMenuAction\n    )\n    .map((child, index) => ({\n      id: `${child.props.title}-${index}`,\n      title: child.props.title,\n      onPress: child.props.onPress,\n    }));\n}\n"]}